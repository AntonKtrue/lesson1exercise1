<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tander.esb</groupId>
	<artifactId>fuse-mdm</artifactId>
	<version>2.84.1</version>
	<name>Fuse MDM</name>

	<properties>
		<maven.test.skip>true</maven.test.skip>
        <exclude.tests>nothing-to-exclude</exclude.tests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <fuse-lib.version>1.6.1</fuse-lib.version>
		<camel.version>2.13.3</camel.version>
		<activemq.version>5.5.0-fuse-00-89</activemq.version>
		<cxf.version>2.7.13</cxf.version>
		<jtds.version>1.3.1</jtds.version>
		<saxon.version>9.4.0.6</saxon.version>
		<jaxws.rt.version>2.1.7</jaxws.rt.version>
		<moxy.version>2.5.1</moxy.version>
		<milf.version>2.0.0</milf.version>
		<tomcat-jdbc.version>7.0.68</tomcat-jdbc.version>
		<jackson.version>2.7.0</jackson.version>
                <jackson.merch.version>1.9.13</jackson.merch.version>
	</properties>

    <profiles>
        <profile>
            <id>fast</id>
            <properties>
                <exclude.tests>/com/tander/route/**</exclude.tests>
            </properties>
        </profile>
    </profiles>

	<build>
		<defaultGoal>install</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>META-INF/*.xml</include>
				</includes>
				<excludes>
					<exclude>xslt/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/jaxb.index</include>
					<include>**/jaxb.properties</include>
				</includes>
			</resource>
            <resource>
                <directory>src/main/resources/xsd</directory>
                <includes>
                    <include>*.xsd</include>
                </includes>
            </resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
                <configuration>
                    <excludes>
                        <exclude>${exclude.tests}</exclude>
                    </excludes>
                </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<useUniqueVersions>false</useUniqueVersions>
							<classpathPrefix>../lib/</classpathPrefix>
							<useUniqueVersions>false</useUniqueVersions>
							<mainClass>com.tander.route.SpringCamelRun</mainClass>
						</manifest>
						<manifestEntries>
							<Version>${project.version}</Version>
							<Timebuild>${maven.build.timestamp}</Timebuild>
						</manifestEntries>
					</archive>
					<finalName>fuse-mdm</finalName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy_dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dist/lib</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy_myself</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- Текущий артефакт -->
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
									<outputDirectory>${project.build.directory}\dist\bin</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.goldin</groupId>
				<artifactId>copy-maven-plugin</artifactId>
				<version>0.2.5</version>
				<executions>
					<execution>
						<id>copy_files</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<targetPath>${project.build.directory}/dist</targetPath>
									<directory>${project.basedir}/src/main/scripts</directory>
									<includes>
										<include>*.bat</include>
										<include>*.sh</include>
									</includes>
								</resource>
								<resource>
									<targetPath>${project.build.directory}/dist/xslt</targetPath>
									<directory>${project.basedir}/src/main/resources/xslt</directory>
									<include>*.xsl</include>
								</resource>
								<resource>
									<targetPath>${project.build.directory}/dist/cert</targetPath>
									<directory>${project.basedir}/src/main/resources/cert</directory>
									<include>*.jks</include>
								</resource>
								<resource>
									<targetPath>${project.build.directory}/dist/conf</targetPath>
									<directory>${project.basedir}/src/main/config</directory>
									<exclude>*.sql</exclude>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- allows the route to be run via 'mvn camel:run' -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
				<version>${camel.version}</version>
				<configuration>
					<fileApplicationContextUri>${basedir}/src/main/config/context.xml</fileApplicationContextUri>
					<systemProperties>
						<systemProperty>
							<key>log4j.configuration</key>
							<value>file:src/main/config/log4j.properties</value>
						</systemProperty>
						<systemProperty>
							<key>config.path</key>
							<value>src/main/config/</value>
						</systemProperty>
						<systemProperty>
							<key>xslt.path</key>
							<value>src/main/resources/xslt/</value>
						</systemProperty>
						<systemProperty>
							<key>cert.path</key>
							<value>src/main/resources/cert/</value>
						</systemProperty>
						<systemProperty>
							<key>java.security.krb5.conf</key>
							<value>src/main/config/krb5.conf</value>
						</systemProperty>

						<systemProperty>
							<key>java.security.auth.login.config</key>
							<value>src/main/config/login.conf</value>
						</systemProperty>
						<systemProperty>
							<key>javax.security.auth.useSubjectCredsOnly</key>
							<value>false</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<!-- <skip>true</skip> -->
					<filesets>
						<fileset>
							<directory>log</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-resources-plugin</artifactId> <version>2.6</version> 
				<executions> <execution> <id>copy-resources</id> <phase>validate</phase> 
				<goals> <goal>copy-resources</goal> </goals> <configuration> <outputDirectory>${project.build.directory}/classes/com/tander/esb/api/jaxb</outputDirectory> 
				<resources> <resource>${project.basedir}/src/main/java/com/tander/esb/api/jaxb/jaxb.index</resource> 
				</resources> </configuration> </execution> </executions> </plugin> -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>${jtds.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-simple</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.tander.esb</groupId>
			<artifactId>fuse-lib</artifactId>
			<version>${fuse-lib.version}</version>
			<exclusions>
				<exclusion>
					<groupId>xalan</groupId>
					<artifactId>xalan</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>Saxon-HE</artifactId>
			<version>${saxon.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jdom</groupId>
					<artifactId>jdom</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xom</groupId>
					<artifactId>xom</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>${jaxws.rt.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>activation</artifactId>
					<groupId>javax.activation</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jetty</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<version>${camel.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-quartz</artifactId>
			<version>${camel.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>tools</artifactId>
					<groupId>com.sun</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jaxb</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-mail</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>${moxy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
			<version>${camel.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.4</version>
		</dependency>
		<dependency>
			<groupId>uk.org.simonsite</groupId>
			<artifactId>log4j-rolling-appender</artifactId>
			<version>20131024-2017</version>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>com.tander.esb.osgi</groupId>
			<artifactId>milf-core</artifactId>
			<version>${milf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>${tomcat-jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
                <dependency>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-core-asl</artifactId>
                    <version>${jackson.merch.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                    <version>${jackson.merch.version}</version>
                </dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-ws</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-security</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-ldap</artifactId>
			<version>${camel.version}</version>
		</dependency>



		<!-- TEST -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
     	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.11.RELEASE</version>
            <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
	</dependencies>
</project>
#!/bin/bash
java -Dfile.encoding=Cp1251 -Dcom.sun.management.jmxremote.port=7227 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dlog4j.configuration=file:conf/log4j.properties -Xmx512m -jar bin/fuse-mdm.jar
log4j.rootLogger=INFO, CONSOLE, FILE

log4j.logger.org.apache.camel=TRACE
log4j.logger.org.apache.http=TRACE
log4j.logger.java.net=TRACE
S
log4j.logger.javax.xml.bind=TRACE
log4j.logger.com.tander.esb =INFO
log4j.logger.com.atomikos=ERROR
log4j.logger.atomikos=OFF
log4j.logger.com.tander.milframework=INFO
log4j.logger.com.tander.esb.mdm.upload=DEBUG
#log4j.logger.org.apache.camel.processor.interceptor.Tracer=OFF





# Console appender
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold = INFO
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss} [%C] %-5p %m%n
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss.SSS} [%30.30c{1}] %-5p : %m%n

log4j.appender.FILE=uk.org.simonsite.log4j.appender.TimeAndSizeRollingAppender
log4j.appender.FILE.File=log/fuse_mdm.log
log4j.appender.FILE.datePattern=.yyyy-MM-dd-HH-00
log4j.appender.FILE.MaxRollFileCount=500
log4j.appender.FILE.MaxFileSize=100MB
log4j.appender.FILE.DateRollEnforced=true
log4j.appender.FILE.CompressionAlgorithm=ZIP



log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss.SSS} [%30.30c{1}] %-5p : %m%n


#log4j.appender.FILE=org.apache.log4j.rolling.RollingFileAppender
#log4j.appender.FILE.File=operations.log
#log4j.appender.FILE.ImmediateFlush=false
# Set the append to false, should not overwrite
#log4j.appender.FILE.Append=true
#log4j.appender.FILE.rollingPolicy=org.apache.log4j.rolling.FixedWindowRollingPolicy  
#log4j.appender.FILE.rollingPolicy.maxIndex=10
#log4j.appender.FILE.triggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy  
#log4j.appender.FILE.triggeringPolicy.MaxFileSize=20000000
#log4j.appender.FILE.rollingPolicy.FileNamePattern=log/fuse_mdm_%i.log  
#log4j.appender.FILE.rollingPolicy.ActiveFileName=log/fuse_mdm_0.log
# Set the maximum file size before rollover
#log4j.appender.FILE.MaxFileSize=10Mb
# Set the the backup index
#log4j.appender.FILE.MaxBackupIndex=10
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss} [%t] [%C{1}] %-5p %m%n
#log4j.appender.FILE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss} [%20.20t] %-30.30c{1} %-5p : %m%n
#log4j.appender.FILE.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss} [%30.30c{1}] %-5p : %m%n
